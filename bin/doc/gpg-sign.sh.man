.\" Automatically generated by Pod::Man 4.14 (Pod::Simple 3.40)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  \*(C+ will
.\" give a nicer C++.  Capital omega is used to do unbreakable dashes and
.\" therefore won't be available.  \*(C` and \*(C' expand to `' in nroff,
.\" nothing in troff, for use with C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
.    ds C`
.    ds C'
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is >0, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.\"
.\" Avoid warning from groff about undefined register 'F'.
.de IX
..
.nr rF 0
.if \n(.g .if rF .nr rF 1
.if (\n(rF:(\n(.g==0)) \{\
.    if \nF \{\
.        de IX
.        tm Index:\\$1\t\\n%\t"\\$2"
..
.        if !\nF==2 \{\
.            nr % 0
.            nr F 2
.        \}
.    \}
.\}
.rr rF
.\"
.\" Accent mark definitions (@(#)ms.acc 1.5 88/02/08 SMI; from UCB 4.2).
.\" Fear.  Run.  Save yourself.  No user-serviceable parts.
.    \" fudge factors for nroff and troff
.if n \{\
.    ds #H 0
.    ds #V .8m
.    ds #F .3m
.    ds #[ \f1
.    ds #] \fP
.\}
.if t \{\
.    ds #H ((1u-(\\\\n(.fu%2u))*.13m)
.    ds #V .6m
.    ds #F 0
.    ds #[ \&
.    ds #] \&
.\}
.    \" simple accents for nroff and troff
.if n \{\
.    ds ' \&
.    ds ` \&
.    ds ^ \&
.    ds , \&
.    ds ~ ~
.    ds /
.\}
.if t \{\
.    ds ' \\k:\h'-(\\n(.wu*8/10-\*(#H)'\'\h"|\\n:u"
.    ds ` \\k:\h'-(\\n(.wu*8/10-\*(#H)'\`\h'|\\n:u'
.    ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'^\h'|\\n:u'
.    ds , \\k:\h'-(\\n(.wu*8/10)',\h'|\\n:u'
.    ds ~ \\k:\h'-(\\n(.wu-\*(#H-.1m)'~\h'|\\n:u'
.    ds / \\k:\h'-(\\n(.wu*8/10-\*(#H)'\z\(sl\h'|\\n:u'
.\}
.    \" troff and (daisy-wheel) nroff accents
.ds : \\k:\h'-(\\n(.wu*8/10-\*(#H+.1m+\*(#F)'\v'-\*(#V'\z.\h'.2m+\*(#F'.\h'|\\n:u'\v'\*(#V'
.ds 8 \h'\*(#H'\(*b\h'-\*(#H'
.ds o \\k:\h'-(\\n(.wu+\w'\(de'u-\*(#H)/2u'\v'-.3n'\*(#[\z\(de\v'.3n'\h'|\\n:u'\*(#]
.ds d- \h'\*(#H'\(pd\h'-\w'~'u'\v'-.25m'\f2\(hy\fP\v'.25m'\h'-\*(#H'
.ds D- D\\k:\h'-\w'D'u'\v'-.11m'\z\(hy\v'.11m'\h'|\\n:u'
.ds th \*(#[\v'.3m'\s+1I\s-1\v'-.3m'\h'-(\w'I'u*2/3)'\s-1o\s+1\*(#]
.ds Th \*(#[\s+2I\s-2\h'-\w'I'u*3/5'\v'-.3m'o\v'.3m'\*(#]
.ds ae a\h'-(\w'a'u*4/10)'e
.ds Ae A\h'-(\w'A'u*4/10)'E
.    \" corrections for vroff
.if v .ds ~ \\k:\h'-(\\n(.wu*9/10-\*(#H)'\s-2\u~\d\s+2\h'|\\n:u'
.if v .ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'\v'-.4m'^\v'.4m'\h'|\\n:u'
.    \" for low resolution devices (crt and lpr)
.if \n(.H>23 .if \n(.V>19 \
\{\
.    ds : e
.    ds 8 ss
.    ds o a
.    ds d- d\h'-1'\(ga
.    ds D- D\h'-1'\(hy
.    ds th \o'bp'
.    ds Th \o'LP'
.    ds ae ae
.    ds Ae AE
.\}
.rm #[ #] #H #V #F C
.\" ========================================================================
.\"
.IX Title "STDIN 1"
.TH STDIN 1 "2024-12-14" "perl v5.32.1" "User Contributed Perl Documentation"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH "NAME gpg\-sign.sh"
.IX Header "NAME gpg-sign.sh"
Sign or verify a file's signature with gpg keys.
.SH "SYNOPSIS"
.IX Header "SYNOPSIS"
.Vb 1
\&    gpg\-sign.sh \-f FILE [\-s] [\-c] [\-k KEY] [\-h] [\-H pStyle]
.Ve
.SH "DESCRIPTION"
.IX Header "DESCRIPTION"
With the \-s or \-c option, sign the \s-1FILE,\s0 with the \-k \s-1KEY,\s0 and output
signature or signed file to \s-1FILE\s0.sig. The private \s-1KEY\s0 needs to be in
youru gnupg keychain file.
.PP
If no \-s or \-c option, verify \s-1FILE,\s0 with the signature file \s-1FILE\s0.sig.
The public \s-1KEY\s0 needs to be in your gnupg keychain file.
.SH "OPTIONS"
.IX Header "OPTIONS"
.IP "\fB\-f \s-1FILE\s0\fR" 4
.IX Item "-f FILE"
File to be signed or verified.
.Sp
If the \-c option was used, the \s-1FILE\s0 can be \s-1FILE\s0.sig.
.IP "\fB\-s\fR" 4
.IX Item "-s"
Sign the \s-1FILE\s0 with \s-1KEY,\s0 and output \s-1FILE\s0.sig.
.Sp
\&\-k \s-1KEY\s0 is required.
.IP "\fB\-c\fR" 4
.IX Item "-c"
Sign the \s-1FILE\s0 with \s-1KEY,\s0 and output \s-1FILE\s0.sig which is a copy of the
file with the signature wrapped around the file.
.Sp
\&\-k \s-1KEY\s0 is required.
.IP "\fB\-k \s-1KEY\s0\fR" 4
.IX Item "-k KEY"
The private \s-1KEY\s0 for signing. This is required for the \-s or \-c options.
.Sp
The private \s-1KEY\s0 needs to be in your gnupg keychain file.
.IP "\fB\-h\fR" 4
.IX Item "-h"
Output this \*(L"long\*(R" usage help. See \*(L"\-H long\*(R"
.IP "\fB\-H pStyle\fR" 4
.IX Item "-H pStyle"
pStyle is used to select the type of help and how it is formatted.
.Sp
Styles:
.Sp
.Vb 5
\&    short|usage \- Output short usage help as text.
\&    long|text   \- Output long usage help as text.
\&    man         \- Output long usage help as a man page.
\&    html        \- Output long usage help as html.
\&    md          \- Output long usage help as markdown.
.Ve
.SH "EXAMPLES"
.IX Header "EXAMPLES"
.SS "Separate signature file"
.IX Subsection "Separate signature file"
.Vb 5
\&  $ gpg\-sign.sh \-s \-k example@gmail.com \-f example.txt
\&    gpg \-\-default\-key example@gmail.com \-\-detach\-sign \-\-armor \-o example.txt.sig example.txt
\&    gpg: using "example@gmail.com" as default secret key for signing
\&    File \*(Aqexample.txt.sig\*(Aq exists. Overwrite? (y/N) y
\&    Signature file: example.txt.sig
.Ve
.PP
Keep the example.txt.sig with the example.txt file. This form will
work for binary files.
.PP
.Vb 6
\&  $ gpg\-sign.sh \-f example.txt
\&    gpg \-\-verify example.txt.sig example.txt
\&    gpg: Signature made Thu 12 Dec 2024 09:14:08 PM PST
\&    gpg:                using RSA key 62AAFB8F3F51623373AD4E1F17DF4FFFFF8E92
\&    gpg:                issuer "example@gmail.com"
\&    gpg: Good signature from "First Last (personal) <example@gmail.com>" [ultimate]
.Ve
.PP
The file matches what was signed.
.PP
.Vb 6
\&  $ gpg\-sign.sh \-f example.txt
\&    gpg \-\-verify example.txt.sig example.txt
\&    gpg: Signature made Thu 12 Dec 2024 09:24:15 PM PST
\&    gpg:                using RSA key 62AAFB8F3F51623373AD4E1F17DF4FFFFF8E92
\&    gpg:                issuer "example@gmail.com"
\&    gpg: BAD signature from "First Last (personal) <example@gmail.com>" [ultimate]
.Ve
.PP
This is what you'll see if the file does not match what was signed.
.SS "Append signature to file"
.IX Subsection "Append signature to file"
.Vb 5
\&  $ gpg\-sign.sh \-c \-k example@gmail.com \-f example.txt
\&    gpg \-\-default\-key example@gmail.com \-\-clear\-sign \-o example.txt.sig example.txt
\&    gpg: using "example@gmail.com" as default secret key for signing
\&    File \*(Aqexample.txt.sig\*(Aq exists. Overwrite? (y/N) y
\&    Signed file: example.txt.sig
.Ve
.PP
The example.txt.sig contains all of example.txt and the signature is
added to the end. Text can be added before and after the signed sections
of the file.
.PP
Text can be put before the line:
.PP
.Vb 1
\&    \-\-\-\-\-BEGIN PGP
.Ve
.PP
And text can be put after the line:
.PP
.Vb 1
\&    \-\-\-\-\-END PGP
.Ve
.PP
The signature is only valid for the text between those lines.
.PP
.Vb 7
\&  $ gpg\-sign.sh \-f example.txt.sig 
\&    gpg \-\-decrypt example.txt.sig
\&    File \*(Aqexample.txt\*(Aq exists. Overwrite? (y/N) y
\&    gpg: Signature made Thu 12 Dec 2024 09:12:44 PM PST
\&    gpg:                using RSA key 62AAFB8F3F51623373AD4E1F17DF4FFFFF8E92
\&    gpg:                issuer "example@gmail.com"
\&    gpg: Good signature from "First Last (personal) <example@gmail.com>" [ultimate]
.Ve
.PP
The file matches the signature at the end of the file. And example.txt
is created without the signature in the file.
.SH "SEE ALSO"
.IX Header "SEE ALSO"
gpg
.SH "HISTORY"
.IX Header "HISTORY"
GPLv2 (c) Copyright
.PP
\&\f(CW$Revision:\fR 1.1 $ \f(CW$Date:\fR 2024/12/13 05:39:04 $ \s-1GMT\s0
